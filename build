#!/usr/bin/env perl

use strict;
use warnings;

my $arg = shift;

require Path::Class::Dir;
my $outdir = Path::Class::Dir->new( 'output' );

if( !$arg ) {
    # clean out any existing build files
    $outdir->rmtree;
    $outdir->mkpath;

    my $src = $outdir->parent->subdir( 'src' );

    _gen_font( $src, $outdir );

    require Template;
    my $tmpl = Template->new;

    my %vars;
    $vars{ css } = _gather_css( $src );

    my $output;
    $tmpl->process( $src->file( 'index.html' )->stringify, \%vars, \$output );

    if( eval "require HTML::Packer;" ) {
        my $packer = HTML::Packer->init();
        $packer->minify( \$output, { 
            remove_comments => 1,
            remove_newlines => 1,
            do_javascript   => 'best',
            do_stylesheet   => 'minify',
            html5           => 1,
        } );
    }

    my $fh = $outdir->file( 'index.html' )->open( 'w' );
    print $fh $output;
    $fh->close;

    require File::Copy::Recursive;
    for( qw( js/ img ) ) {
        my $d = $outdir->subdir( $_ );
        $d->mkpath;
        File::Copy::Recursive::rcopy_glob( $src->subdir( $_ )->stringify . '/*.*', $d );
    }
}
elsif( $arg eq 'server' ) {
    require Plack::Loader;
    require Plack::App::Directory;
    my $app = Plack::App::Directory->new( { root => "$outdir" } )->to_app;
    print STDERR 'browse to http://localhost:1337/index.html', "\n";
    Plack::Loader->load( 'Standalone', port => 1337 )->run( $app );
}
elsif( $arg eq 'zip' ) {
    require Cwd;
    my $cur = Cwd::cwd();
    chdir( 'output' );
    $outdir->parent->file( '16c-editor.zip' )->remove;

    `zip -r ../16c-editor.zip .`;

    chdir( $cur );
}

sub _gather_css {
    my $src = shift;
    $src = $src->subdir( 'css' );
    my $css = '';

    while ( my $file = $src->next ) {
        next unless -f $file;
        my $fh = $file->open('r') or die "Can't read $file: $!";
        $css .= do { local $/; <$fh> } . "\n";
    }

    chop( $css );
    return $css;
}

sub _gen_font {
    my $srcdir = shift;
    my $outdir = shift;
    my $font   = do $srcdir->file( qw( font 8x16.pl ) )->stringify;

    $outdir->subdir( 'js' )->mkpath;
    my $fh = $outdir->file( qw( js 8x16.dat ) )->open( 'w' );

    for my $x ( @$font ) {
        print $fh chr $_ for @$x;
    }

    $fh->close;
}
